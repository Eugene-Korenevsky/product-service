{
 "Resources": {
  "ProductsRestAPI115F5D13": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Product Service"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Resource"
   }
  },
  "ProductsRestAPIDeploymentBA6537C91aa838daa966d2600d320297c8ecc73b": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "DependsOn": [
    "ProductsRestAPIOPTIONS403E2B44",
    "ProductsRestAPIproductsidGET019C9719",
    "ProductsRestAPIproductsidOPTIONSB678D3DF",
    "ProductsRestAPIproductsid4DDCF634",
    "ProductsRestAPIproductsGET199571DF",
    "ProductsRestAPIproductsOPTIONS2C8999DE",
    "ProductsRestAPIproductsPOSTE40362E4",
    "ProductsRestAPIproducts3A1B3C3F"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Deployment/Resource"
   }
  },
  "ProductsRestAPIDeploymentStageprod1A9E8C1A": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ProductsRestAPIDeploymentBA6537C91aa838daa966d2600d320297c8ecc73b"
    },
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/DeploymentStage.prod/Resource"
   }
  },
  "ProductsRestAPIOPTIONS403E2B44": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "ProductsRestAPI115F5D13",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/OPTIONS/Resource"
   }
  },
  "ProductsRestAPIproducts3A1B3C3F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ProductsRestAPI115F5D13",
      "RootResourceId"
     ]
    },
    "PathPart": "products",
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/Resource"
   }
  },
  "ProductsRestAPIproductsOPTIONS2C8999DE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductsRestAPIproducts3A1B3C3F"
    },
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/OPTIONS/Resource"
   }
  },
  "ProductsRestAPIproductsid4DDCF634": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ProductsRestAPIproducts3A1B3C3F"
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/{id}/Resource"
   }
  },
  "ProductsRestAPIproductsidOPTIONSB678D3DF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductsRestAPIproductsid4DDCF634"
    },
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/{id}/OPTIONS/Resource"
   }
  },
  "ProductsRestAPIproductsidGETApiPermissionProductServiceStackProductsRestAPIED7A35B2GETproductsid3E750F9A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getProductsById008BCA51",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductsRestAPI115F5D13"
       },
       "/",
       {
        "Ref": "ProductsRestAPIDeploymentStageprod1A9E8C1A"
       },
       "/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/{id}/GET/ApiPermission.ProductServiceStackProductsRestAPIED7A35B2.GET..products.{id}"
   }
  },
  "ProductsRestAPIproductsidGETApiPermissionTestProductServiceStackProductsRestAPIED7A35B2GETproductsid7C64AA37": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getProductsById008BCA51",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductsRestAPI115F5D13"
       },
       "/test-invoke-stage/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/{id}/GET/ApiPermission.Test.ProductServiceStackProductsRestAPIED7A35B2.GET..products.{id}"
   }
  },
  "ProductsRestAPIproductsidGET019C9719": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getProductsById008BCA51",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ProductsRestAPIproductsid4DDCF634"
    },
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/{id}/GET/Resource"
   }
  },
  "ProductsRestAPIproductsGETApiPermissionProductServiceStackProductsRestAPIED7A35B2GETproductsE98CA398": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getProductsList1F4CE4F4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductsRestAPI115F5D13"
       },
       "/",
       {
        "Ref": "ProductsRestAPIDeploymentStageprod1A9E8C1A"
       },
       "/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/GET/ApiPermission.ProductServiceStackProductsRestAPIED7A35B2.GET..products"
   }
  },
  "ProductsRestAPIproductsGETApiPermissionTestProductServiceStackProductsRestAPIED7A35B2GETproducts1C9F5627": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getProductsList1F4CE4F4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductsRestAPI115F5D13"
       },
       "/test-invoke-stage/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/GET/ApiPermission.Test.ProductServiceStackProductsRestAPIED7A35B2.GET..products"
   }
  },
  "ProductsRestAPIproductsGET199571DF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getProductsList1F4CE4F4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ProductsRestAPIproducts3A1B3C3F"
    },
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/GET/Resource"
   }
  },
  "ProductsRestAPIproductsPOSTApiPermissionProductServiceStackProductsRestAPIED7A35B2POSTproducts5BB917FA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createProduct6AB81851",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductsRestAPI115F5D13"
       },
       "/",
       {
        "Ref": "ProductsRestAPIDeploymentStageprod1A9E8C1A"
       },
       "/POST/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/POST/ApiPermission.ProductServiceStackProductsRestAPIED7A35B2.POST..products"
   }
  },
  "ProductsRestAPIproductsPOSTApiPermissionTestProductServiceStackProductsRestAPIED7A35B2POSTproducts5BA2B177": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createProduct6AB81851",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductsRestAPI115F5D13"
       },
       "/test-invoke-stage/POST/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/POST/ApiPermission.Test.ProductServiceStackProductsRestAPIED7A35B2.POST..products"
   }
  },
  "ProductsRestAPIproductsPOSTE40362E4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "createProduct6AB81851",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ProductsRestAPIproducts3A1B3C3F"
    },
    "RestApiId": {
     "Ref": "ProductsRestAPI115F5D13"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsRestAPI/Default/products/POST/Resource"
   }
  },
  "getProductsListServiceRoleC64A5CD3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/getProductsList/ServiceRole/Resource"
   }
  },
  "getProductsListServiceRoleDefaultPolicyFCF405B6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/products"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/stocks"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getProductsListServiceRoleDefaultPolicyFCF405B6",
    "Roles": [
     {
      "Ref": "getProductsListServiceRoleC64A5CD3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/getProductsList/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getProductsList1F4CE4F4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0155fd98a22e35f7efbe86f30f597fc980d1d3a4db7b7bf5b6337e9e50af7605.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "getProductsListServiceRoleC64A5CD3",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "getProductsListServiceRoleDefaultPolicyFCF405B6",
    "getProductsListServiceRoleC64A5CD3"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/getProductsList/Resource",
    "aws:asset:path": "asset.0155fd98a22e35f7efbe86f30f597fc980d1d3a4db7b7bf5b6337e9e50af7605",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "getProductsByIdServiceRoleD8824A03": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/getProductsById/ServiceRole/Resource"
   }
  },
  "getProductsByIdServiceRoleDefaultPolicyF36017B0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/products"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/stocks"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getProductsByIdServiceRoleDefaultPolicyF36017B0",
    "Roles": [
     {
      "Ref": "getProductsByIdServiceRoleD8824A03"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/getProductsById/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getProductsById008BCA51": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1f706aca554717f379d331b7b0fcfffd95883381791098ea1ad0548be3062337.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "getProductsByIdServiceRoleD8824A03",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "getProductsByIdServiceRoleDefaultPolicyF36017B0",
    "getProductsByIdServiceRoleD8824A03"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/getProductsById/Resource",
    "aws:asset:path": "asset.1f706aca554717f379d331b7b0fcfffd95883381791098ea1ad0548be3062337",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "createProductServiceRole49F078DF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/createProduct/ServiceRole/Resource"
   }
  },
  "createProductServiceRoleDefaultPolicyA4987AF8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/products"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/stocks"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "createProductServiceRoleDefaultPolicyA4987AF8",
    "Roles": [
     {
      "Ref": "createProductServiceRole49F078DF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/createProduct/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "createProduct6AB81851": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f94be81dd79e3a3180a05682c40038768d5d7bf76b8c28acec4c5b69d76fd831.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "createProductServiceRole49F078DF",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "createProductServiceRoleDefaultPolicyA4987AF8",
    "createProductServiceRole49F078DF"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/createProduct/Resource",
    "aws:asset:path": "asset.f94be81dd79e3a3180a05682c40038768d5d7bf76b8c28acec4c5b69d76fd831",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Py26DMBD8ltzNltL+QJKqt7ZRWvWKFntLDH4g1jRCiH+vDUGNfJjHjkbjAh7zZ8h3eOVMqjYzuoLpM6BsRbTKSY0OrVcVfGFl6IBM34XATtcY6IojTGfisO+0OP64jb5QZ/xoyYXk3qnYW1PyVhLzfujl0ireKFy8Sscb26635oXPwqCtFMIUzRP1VjNr71LkdXAyRL5FSucVNQzvC2xXodHGzd6stQlP3mg5JrmyWfBTicwUGPYJoobDIFsKaeickh9D6IbwP3HJpU9pV9/vTfzondLrsjQJGn74LXKIb9ew1lk/uKAtwXnFP/OxWGyRAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ProductsRestAPIEndpoint3F1D59DF": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ProductsRestAPI115F5D13"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ProductsRestAPIDeploymentStageprod1A9E8C1A"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}